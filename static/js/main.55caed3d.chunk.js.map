{"version":3,"sources":["components/spinner.svg","reducers/FavsReducer.jsx","context/ImagesContex.jsx","components/FabButton.jsx","components/ImageCardItem.jsx","components/ImageList.jsx","components/SearchBar.jsx","App.js","index.js"],"names":["module","exports","FavsReducer","state","action","type","image","filter","id","ImagesContext","createContext","ImagesContextProvider","props","useState","searchTerm","setSearchTerm","isLoading","setIsLoading","showFavs","setShowFavs","images","setImages","useReducer","localData","localStorage","getItem","JSON","parse","favs","dispatch","useEffect","setItem","stringify","fetch","process","then","res","json","data","hits","catch","err","console","log","Provider","value","children","FavButton","useContext","isFav","setIsFav","find","fav","icon","size","className","onClick","ImageCardItem","index","openFullScreen","formatedTags","_","without","tags","split","join","src","webformatURL","alt","style","height","user","views","downloads","likes","map","tag","key","ImageList","largePicsArray","largeImageURL","openPicture","setOpenPicture","isFullScreen","setIsFullScreen","spinner","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","SearchBar","text","setText","onSubmit","e","preventDefault","window","scrollTo","onChange","target","placeholder","App","ImagesContex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55caed3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ecb5db6d.svg\";","function FavsReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAVS\": {\r\n      return [action.image, ...state];\r\n    }\r\n    case \"REMOVE_FROM_FAVS\": {\r\n      return state.filter((image) => {\r\n        return image.id !== action.image.id;\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default FavsReducer;\r\n","import React, { createContext, useReducer, useEffect, useState } from \"react\";\r\nimport FavsReducer from \"../reducers/FavsReducer\";\r\n\r\n//Create context\r\nexport const ImagesContext = createContext();\r\n\r\nconst ImagesContextProvider = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showFavs, setShowFavs] = useState(false);\r\n\r\n  const [images, setImages] = useState([]);\r\n\r\n  // Reducer for Favorite pics fetching from Local Storage if available\r\n  const [favs, dispatch] = useReducer(FavsReducer, [], () => {\r\n    const localData = localStorage.getItem(\"favs\");\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n\r\n  // sync favs on local data\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favs\", JSON.stringify(favs));\r\n  }, [favs]);\r\n\r\n  // if showFavs load favs into images state\r\n  useEffect(() => {\r\n    if (showFavs) {\r\n      setIsLoading(true);\r\n      setImages(favs);\r\n      setIsLoading(false);\r\n    }\r\n  }, [showFavs, favs]);\r\n\r\n  //if not on Favourtites tab fetch images from IPA by shearchTerm\r\n  useEffect(() => {\r\n    if (!showFavs) {\r\n      setIsLoading(true);\r\n      fetch(\r\n        `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API}&q=${searchTerm}&per_page=200&safesearch=false`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setImages(data.hits);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [searchTerm, showFavs]);\r\n\r\n  return (\r\n    <ImagesContext.Provider\r\n      value={{\r\n        images,\r\n        isLoading,\r\n        setIsLoading,\r\n        setSearchTerm,\r\n        setShowFavs,\r\n        dispatch,\r\n        favs,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ImagesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ImagesContextProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ImagesContext } from \"../context/ImagesContex\";\r\n\r\nfunction FavButton({ image }) {\r\n  const { dispatch, favs } = useContext(ImagesContext);\r\n  const [isFav, setIsFav] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fav = favs.find((fav) => fav.id === image.id);\r\n    if (fav) {\r\n      setIsFav(true);\r\n    }\r\n  }, [favs]);\r\n\r\n  function handleFav() {\r\n    const type = isFav ? \"REMOVE_FROM_FAVS\" : \"ADD_TO_FAVS\";\r\n    dispatch({\r\n      type,\r\n      image,\r\n    });\r\n    setIsFav(!isFav);\r\n  }\r\n  const icon = isFav ? \"fas fa-heart\" : \"far fa-heart\";\r\n  const size = isFav ? \"text-4xl\" : \"text-3xl\";\r\n\r\n  return (\r\n    <i\r\n      className={` ${icon} ${size} text-red-600 mr-4 cursor-pointer`}\r\n      onClick={handleFav}\r\n    ></i>\r\n  );\r\n}\r\n\r\nexport default FavButton;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport FavButton from \"./FabButton\";\r\n\r\nfunction ImageCardItem({ image, index, openFullScreen }) {\r\n  // API send tags in this format \"tag1, tag2, tag3\".\r\n  // 1. transform into array with split\r\n  // 2. remove spaces with _.without\r\n  // 3. join back into string with join and split by \",\"\r\n  // expected result = [tag1, tag2, tag3]\r\n\r\n  const formatedTags = _.without(image.tags.split(\"\"), \" \").join(\"\").split(\",\");\r\n\r\n  return (\r\n    <div className=\"rounded-lg overflow-hidden shadow-xl bg-gray-300 m-4 border border-gray-400 hover:border-gray-800\">\r\n      <img\r\n        src={image.webformatURL}\r\n        alt=\"\"\r\n        className=\"w-full object-cover cursor-pointer\"\r\n        style={{ height: \"300px\" }}\r\n        onClick={() => openFullScreen(index)}\r\n      />\r\n      <div className=\"px-6 pt-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        <FavButton image={image} />\r\n        {formatedTags.map((tag, index) => (\r\n          <span\r\n            className=\"inline-block bg-gray-200 text-sm font-semibold text-gray-700 mr-2 rounded-full px-3 py-1\"\r\n            key={index}\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCardItem;\r\n","import React, { useState, useContext } from \"react\";\r\nimport ImageCardItem from \"./ImageCardItem\";\r\nimport { ImagesContext } from \"../context/ImagesContex\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport spinner from \"./spinner.svg\";\r\n\r\nfunction ImageList() {\r\n  const { isLoading, images } = useContext(ImagesContext);\r\n\r\n  const largePicsArray = images.map((image) => image.largeImageURL);\r\n\r\n  const [openPicture, setOpenPicture] = useState(0);\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  function openFullScreen(index) {\r\n    setOpenPicture(index);\r\n    setIsFullScreen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"text-6xl text-center mt-48\">\r\n          <img src={spinner} alt=\"Loading\" className=\"block mx-auto\" />\r\n        </div>\r\n      ) : !images.length ? (\r\n        <div className=\"text-6xl text-center mt-48\">No images found</div>\r\n      ) : (\r\n        <div className=\" mt-20\">\r\n          <div className=\"grid grid-cols-1 max-w-screen-sm md:max-w-screen-lg md:grid-cols-2 xl:max-w-full xl:m-4 xl:grid-cols-3 mx-6 mx-auto\">\r\n            {images.map((image, index) => {\r\n              return (\r\n                <ImageCardItem\r\n                  key={image.id}\r\n                  image={image}\r\n                  index={index}\r\n                  openFullScreen={openFullScreen}\r\n                />\r\n              );\r\n            })}\r\n            {isFullScreen && (\r\n              <Lightbox\r\n                mainSrc={largePicsArray[openPicture]}\r\n                nextSrc={\r\n                  largePicsArray[(openPicture + 1) % largePicsArray.length]\r\n                }\r\n                prevSrc={\r\n                  largePicsArray[\r\n                    (openPicture + largePicsArray.length - 1) %\r\n                      largePicsArray.length\r\n                  ]\r\n                }\r\n                onCloseRequest={() => setIsFullScreen(false)}\r\n                onMovePrevRequest={() =>\r\n                  setOpenPicture(\r\n                    (openPicture + largePicsArray.length - 1) %\r\n                      largePicsArray.length\r\n                  )\r\n                }\r\n                onMoveNextRequest={() =>\r\n                  setOpenPicture((openPicture + 1) % largePicsArray.length)\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default ImageList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ImagesContext } from \"../context/ImagesContex\";\r\n\r\nfunction SearchBar() {\r\n  const [text, setText] = useState(\"\");\r\n  const { setSearchTerm, setShowFavs } = useContext(ImagesContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchTerm(text);\r\n    setShowFavs(false);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\" mx-auto py-3 flex fixed top-0 w-full bg-gray-200\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"border-b-2 border-teal-500 py-1 flex w-5/6 max-w-3xl mx-auto\"\r\n      >\r\n        <input\r\n          className=\" text-gray-700 py-1 px-2 focus:outline-none text-xl w-full mr-2\"\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Search image\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          className=\"bg-teal-500 hover:bg-teal-700 border-none text-lg text-white py-2 px-2 rounded flex-shrink-0 ml-auto\"\r\n        />\r\n      </form>\r\n      <button\r\n        onClick={() => setShowFavs(true)}\r\n        className=\" bg-orange-500 hover:bg-orange-600 border-none text-lg text-white px-2 py-2 rounded mx-3\"\r\n      >\r\n        Show favs\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\nimport ImageList from \"./components/ImageList\";\nimport SearchBar from \"./components/SearchBar\";\nimport ImagesContextProvider from \"./context/ImagesContex\";\n\nfunction App() {\n  return (\n    <ImagesContextProvider>\n      <SearchBar />\n      <ImageList />\n    </ImagesContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./tailwind.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}